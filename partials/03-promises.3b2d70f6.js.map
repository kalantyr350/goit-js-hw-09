{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAOC,SAASC,cAAc,SAE9BC,EAAM,GAqCZ,SAASC,EAAcC,EAAUC,EAAOC,GACtC,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,GACFF,EAAQ,CAAEJ,WAAUC,QAAOC,SAE7BG,EAAO,CAAEL,WAAUC,QAAOC,Q,GACzBD,GAASD,EAAW,GAAKE,E,IA3ChCP,EAAKe,iBAAiB,SACtB,SAAkBC,GAChBb,EAAIa,EAAMC,OAAOC,MAAQF,EAAMC,OAAOE,K,IAGxCnB,EAAKe,iBAAiB,UAEtB,SAAqBC,GACnBA,EAAMI,iBAGN,IAAMC,EAAW,IAAIC,SAASN,EAAMO,eACpCC,QAAQC,IAAIJ,GAEZ,IAAK,IAAIK,EAAI,EAAGA,GAAKvB,EAAIwB,OAAQD,IAC3BA,GAAKvB,EAAIwB,QACXvB,EAAcsB,EAAGE,OAAOzB,EAAIG,OAAQsB,OAAOzB,EAAII,OAC5CsB,MAAK,SAAAC,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAAOC,EAAIuB,EAAJvB,KACxBwB,EAAAjC,GAASkC,OAAOC,QACd,uBACIC,OADqB7B,EAAS,QAEjC6B,OADC5B,GAASD,EAAW,GAAKE,EAC1B,M,IAGJ4B,OAAM,SAAAL,G,IAAGzB,EAAQyB,EAARzB,SAAUC,EAAKwB,EAALxB,MAAOC,EAAIuB,EAAJvB,KACzBwB,EAAAjC,GAASkC,OAAOI,QACd,sBACEF,OADoB7B,EAAS,QAE9B6B,OADC5B,GAASD,EAAW,GAAKE,EAC1B,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// const delayInput = document.querySelector('.form');\nconst form = document.querySelector('.form');\n\nconst obj = {};\n\nform.addEventListener('input', inputObj);\nfunction inputObj(event) {\n  obj[event.target.name] = event.target.value;\n}\n\nform.addEventListener('submit', formHandler);\n\nfunction formHandler(event) {\n  event.preventDefault();\n\n  //\n  const formData = new FormData(event.currentTarget);\n  console.log(formData);\n\n  for (let i = 1; i <= obj.amount; i++) {\n    if (i <= obj.amount) {\n      createPromise(i, Number(obj.delay), Number(obj.step))\n        .then(({ position, delay, step }) => {\n          Notiflix.Notify.success(\n            `✅ Fulfilled promise ${position} in ${\n              delay + (position - 1) * step\n            }ms`\n          );\n        })\n        .catch(({ position, delay, step }) => {\n          Notiflix.Notify.failure(\n            `❌ Rejected promise ${position} in ${\n              delay + (position - 1) * step\n            }ms`\n          );\n        });\n    }\n  }\n}\n\nfunction createPromise(position, delay, step) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay, step });\n      }\n      reject({ position, delay, step });\n    }, delay + (position - 1) * step);\n  });\n}\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$obj","$ce04d3a99e08e73b$var$createPromise","position","delay","step","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","target","name","value","preventDefault","formData","FormData","currentTarget","console","log","i","amount","Number","then","param","$parcel$interopDefault","Notify","success","concat","catch","failure"],"version":3,"file":"03-promises.3b2d70f6.js.map"}